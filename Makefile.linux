#
# Quake Makefile for Linux
#

include common.mk

ARCH=i386
NOARCH=noarch

SRC_DIR=$(shell pwd)/src

OLEVEL ?= O3
OCPU ?= 486
OLTO ?= yes
OASM ?= yes
OSTRIP ?=-s

DEFS :=

ifeq "$(OCPU)" "386"
    OARCH=i486
    OTUNE=i386
else ifeq "$(OCPU)" "486"
    OARCH=i486
    OTUNE=i486
else ifeq "$(OCPU)" "cx4"
    OARCH=i486
    OTUNE=i486
else ifeq "$(OCPU)" "586"
    OARCH=pentium
    OTUNE=pentium
else ifeq "$(OCPU)" "mmx"
	DEFS += -DUSE_MMX
    OARCH=pentium-mmx
    OTUNE=pentium-mmx	
else ifeq "$(OCPU)" "686"
    OARCH=pentiumpro
    OTUNE=pentiumpro
else
    $(error unknown cpu type $(OCPU))
endif

BINNAME=$(OCPU)q$(OLEVEL)$(LTOCHAR)

ifeq "$(OLTO)" "yes"
    LTOFLAGS=-flto
    BINNAME:=$(BINNAME)l
endif

ifneq "$(OASM)" "yes"
    ID386=0
    BINNAME:=$(BINNAME)c
else
    ID386=1
endif

BUILD_DEBUG_DIR=debug$(ARCH)$(GLIBC)
BUILD_RELEASE_DIR=release$(ARCH)$(GLIBC)

CC_VERSION=$(shell $(CC) --version | head -n 1 | awk -F " " '{print $3}')

BASE_CFLAGS=-m32 -g -DNO_ASM_PREFIX -Dstricmp=strcasecmp $(DEFS) -DSUBARCH="\"$(OCPU)\"" -DOLEVEL="\"$(OLEVEL)\"" -DREVISION="$(REVISION)" -DLTOFLAGS="\" $(LTOFLAGS)\"" -Did386=$(ID386) -DCCVERSION="\"$(CC_VERSION)\""
RELEASE_CFLAGS=$(BASE_CFLAGS) $(OSTRIP) -$(OLEVEL) -march=$(OARCH) -mtune=$(OTUNE) -ffast-math \
								-fno-unwind-tables -fno-asynchronous-unwind-tables -funroll-loops \
								-fno-stack-protector -fexpensive-optimizations $(LTOFLAGS)\


BUILDDIR ?= $(shell pwd)/build/$(BUILD_RELEASE_DIR)/

ifeq "$(OPROFILE)" "yes"
BASE_CFLAGS+= -pg
endif

DEBUG_CFLAGS=$(BASE_CFLAGS)
CFLAGS?=$(BASE_CFLAGS) $(RELEASE_CFLAGS)

LDFLAGS=-lm -lX11 -lXext -g

DO_CC=$(CC) $(CFLAGS) -o $@ -c $<
DO_DEBUG_CC=$(CC) $(DEBUG_CFLAGS) -o $@ -c $<
DO_O_CC=$(CC) -O $(CFLAGS) -o $@ -c $<
DO_AS=$(CC) $(CFLAGS) -DELF -x assembler-with-cpp -o $@ -c $<

#############################################################################
# SETUP AND BUILD
#############################################################################

TARGETS=$(BUILDDIR)/$(BINNAME)

build_release: $(BUILDDIR)/$(BINNAME)

$(BUILDDIR):
	mkdir -p $(BUILDDIR)

all: $(BUILDDIR) $(BUILDDIR)/$(BINNAME) build_release $(TARGETS)

#############################################################################
# SVGALIB Quake
#############################################################################

486QUAKE_OBJS = \
	$(BUILDDIR)/cl_demo.o \
	$(BUILDDIR)/cl_input.o \
	$(BUILDDIR)/cl_main.o \
	$(BUILDDIR)/cl_parse.o \
	$(BUILDDIR)/cl_tent.o \
	$(BUILDDIR)/chase.o \
	$(BUILDDIR)/cmd.o \
	$(BUILDDIR)/common.o \
	$(BUILDDIR)/console.o \
	$(BUILDDIR)/crc.o \
	$(BUILDDIR)/cvar.o \
	$(BUILDDIR)/draw.o \
	$(BUILDDIR)/d_edge.o \
	$(BUILDDIR)/d_fill.o \
	$(BUILDDIR)/d_init.o \
	$(BUILDDIR)/d_modech.o \
	$(BUILDDIR)/d_part.o \
	$(BUILDDIR)/d_polyse.o \
	$(BUILDDIR)/d_scan.o \
	$(BUILDDIR)/d_sky.o \
	$(BUILDDIR)/d_sprite.o \
	$(BUILDDIR)/d_surf.o \
	$(BUILDDIR)/d_zpoint.o \
	$(BUILDDIR)/host.o \
	$(BUILDDIR)/host_cmd.o \
	$(BUILDDIR)/keys.o \
	$(BUILDDIR)/menu.o \
	$(BUILDDIR)/mathlib.o \
	$(BUILDDIR)/model.o \
	$(BUILDDIR)/net_bsd.o \
	$(BUILDDIR)/net_dgrm.o \
	$(BUILDDIR)/net_loop.o \
	$(BUILDDIR)/net_main.o \
	$(BUILDDIR)/net_udp.o \
	$(BUILDDIR)/net_vcr.o \
	$(BUILDDIR)/nonintel.o \
	$(BUILDDIR)/pr_cmds.o \
	$(BUILDDIR)/pr_edict.o \
	$(BUILDDIR)/pr_exec.o \
	$(BUILDDIR)/r_aclip.o \
	$(BUILDDIR)/r_alias.o \
	$(BUILDDIR)/r_bsp.o \
	$(BUILDDIR)/r_light.o \
	$(BUILDDIR)/r_draw.o \
	$(BUILDDIR)/r_efrag.o \
	$(BUILDDIR)/r_edge.o \
	$(BUILDDIR)/r_misc.o \
	$(BUILDDIR)/r_main.o \
	$(BUILDDIR)/r_sky.o \
	$(BUILDDIR)/r_sprite.o \
	$(BUILDDIR)/r_surf.o \
	$(BUILDDIR)/r_part.o \
	$(BUILDDIR)/r_vars.o \
	$(BUILDDIR)/screen.o \
	$(BUILDDIR)/sbar.o \
	$(BUILDDIR)/sv_main.o \
	$(BUILDDIR)/sv_phys.o \
	$(BUILDDIR)/sv_move.o \
	$(BUILDDIR)/sv_user.o \
	$(BUILDDIR)/zone.o	\
	$(BUILDDIR)/view.o	\
	$(BUILDDIR)/wad.o \
	$(BUILDDIR)/world.o \
	\
	$(BUILDDIR)/cd_null.o \
	$(BUILDDIR)/sys_linux.o \
	$(BUILDDIR)/vid_x.o \
	$(BUILDDIR)/snd_mem.o \
	$(BUILDDIR)/snd_mix.o \
	$(BUILDDIR)/snd_null.o \
	\
	$(BUILDDIR)/d_copy.o \
	$(BUILDDIR)/d_draw.o \
	$(BUILDDIR)/d_draw16.o \
	$(BUILDDIR)/d_parta.o \
	$(BUILDDIR)/d_polysa.o \
	$(BUILDDIR)/d_scana.o \
	$(BUILDDIR)/d_spr8.o \
	$(BUILDDIR)/d_varsa.o \
	$(BUILDDIR)/math.o \
	$(BUILDDIR)/r_aliasa.o \
	$(BUILDDIR)/r_drawa.o \
	$(BUILDDIR)/r_edgea.o \
	$(BUILDDIR)/r_varsa.o \
	$(BUILDDIR)/surf16.o \
	$(BUILDDIR)/surf8.o \
	$(BUILDDIR)/worlda.o \
	$(BUILDDIR)/r_aclipa.o \
	$(BUILDDIR)/snd_mixa.o
    
ifneq "$(OASM)" "yes"
486QUAKE_COBJS = \
	$(BUILDDIR)/d_vars.o \

endif

$(BUILDDIR)/$(BINNAME) : $(BUILDDIR) $(486QUAKE_OBJS) $(486QUAKE_COBJS)
	$(CC) $(RELEASE_CFLAGS) -o $@ -Wl,--start-group $(486QUAKE_COBJS) $(486QUAKE_OBJS) $(LDFLAGS) -Wl,--end-group

$(BUILDDIR)/$(BINNAME).exe : $(486QUAKE_OBJS) $(486QUAKE_COBJS)
	$(CC) $(RELEASE_CFLAGS) -o $@ -Wl,--start-group $(486QUAKE_COBJS) $(486QUAKE_OBJS) $(LDFLAGS) -Wl,--end-group

####

$(BUILDDIR)/cl_demo.o :  $(SRC_DIR)/cl_demo.c
	$(DO_CC)

$(BUILDDIR)/cl_input.o : $(SRC_DIR)/cl_input.c
	$(DO_CC)

$(BUILDDIR)/cl_main.o :  $(SRC_DIR)/cl_main.c
	$(DO_CC)

$(BUILDDIR)/cl_parse.o : $(SRC_DIR)/cl_parse.c
	$(DO_CC)

$(BUILDDIR)/cl_tent.o :  $(SRC_DIR)/cl_tent.c
	$(DO_CC)

$(BUILDDIR)/chase.o :    $(SRC_DIR)/chase.c
	$(DO_CC)

$(BUILDDIR)/cmd.o :      $(SRC_DIR)/cmd.c
	$(DO_CC)

$(BUILDDIR)/common.o :   $(SRC_DIR)/common.c
	$(DO_DEBUG_CC)

$(BUILDDIR)/console.o :  $(SRC_DIR)/console.c
	$(DO_CC)

$(BUILDDIR)/crc.o :      $(SRC_DIR)/crc.c
	$(DO_CC)

$(BUILDDIR)/cvar.o :     $(SRC_DIR)/cvar.c
	$(DO_CC)

$(BUILDDIR)/draw.o :     $(SRC_DIR)/draw.c
	$(DO_CC)

$(BUILDDIR)/d_edge.o :   $(SRC_DIR)/d_edge.c
	$(DO_CC)

$(BUILDDIR)/d_fill.o :   $(SRC_DIR)/d_fill.c
	$(DO_CC)

$(BUILDDIR)/d_init.o :   $(SRC_DIR)/d_init.c
	$(DO_CC)

$(BUILDDIR)/d_modech.o : $(SRC_DIR)/d_modech.c
	$(DO_CC)

$(BUILDDIR)/d_part.o :   $(SRC_DIR)/d_part.c
	$(DO_CC)

$(BUILDDIR)/d_polyse.o : $(SRC_DIR)/d_polyse.c
	$(DO_CC)

$(BUILDDIR)/d_scan.o :   $(SRC_DIR)/d_scan.c
	$(DO_CC)

$(BUILDDIR)/d_sky.o :    $(SRC_DIR)/d_sky.c
	$(DO_CC)

$(BUILDDIR)/d_sprite.o : $(SRC_DIR)/d_sprite.c
	$(DO_CC)

$(BUILDDIR)/d_surf.o :   $(SRC_DIR)/d_surf.c
	$(DO_CC)

$(BUILDDIR)/d_vars.o :   $(SRC_DIR)/d_vars.c
	$(DO_CC)

$(BUILDDIR)/d_zpoint.o : $(SRC_DIR)/d_zpoint.c
	$(DO_CC)

$(BUILDDIR)/host.o :     $(SRC_DIR)/host.c
	$(DO_CC)

$(BUILDDIR)/host_cmd.o : $(SRC_DIR)/host_cmd.c
	$(DO_CC)

$(BUILDDIR)/keys.o :     $(SRC_DIR)/keys.c
	$(DO_CC)

$(BUILDDIR)/menu.o :     $(SRC_DIR)/menu.c
	$(DO_CC)

$(BUILDDIR)/mathlib.o :  $(SRC_DIR)/mathlib.c
	$(DO_CC)

$(BUILDDIR)/model.o :    $(SRC_DIR)/model.c
	$(DO_CC)

$(BUILDDIR)/net_bw.o : $(SRC_DIR)/net_bw.c
	$(DO_CC)

$(BUILDDIR)/net_dgrm.o : $(SRC_DIR)/net_dgrm.c
	$(DO_CC)

$(BUILDDIR)/net_loop.o : $(SRC_DIR)/net_loop.c
	$(DO_CC)

$(BUILDDIR)/net_main.o : $(SRC_DIR)/net_main.c
	$(DO_CC)

$(BUILDDIR)/net_ser.o : $(SRC_DIR)/net_ser.c
	$(DO_CC)

$(BUILDDIR)/net_vcr.o :  $(SRC_DIR)/net_vcr.c
	$(DO_CC)

$(BUILDDIR)/net_udp.o :  $(SRC_DIR)/net_udp.c
	$(DO_CC)

$(BUILDDIR)/net_ipx.o :  $(SRC_DIR)/net_ipx.c
	$(DO_CC)

$(BUILDDIR)/net_mp.o :  $(SRC_DIR)/net_mp.c
	$(DO_CC)

$(BUILDDIR)/net_bsd.o :  $(SRC_DIR)/net_bsd.c
	$(DO_CC)

$(BUILDDIR)/nonintel.o : $(SRC_DIR)/nonintel.c
	$(DO_CC)

$(BUILDDIR)/pr_cmds.o :  $(SRC_DIR)/pr_cmds.c
	$(DO_CC)

$(BUILDDIR)/pr_edict.o : $(SRC_DIR)/pr_edict.c
	$(DO_CC)

$(BUILDDIR)/pr_exec.o :  $(SRC_DIR)/pr_exec.c
	$(DO_CC)

$(BUILDDIR)/r_aclip.o :  $(SRC_DIR)/r_aclip.c
	$(DO_CC)

$(BUILDDIR)/r_alias.o :  $(SRC_DIR)/r_alias.c
	$(DO_CC)

$(BUILDDIR)/r_bsp.o :    $(SRC_DIR)/r_bsp.c
	$(DO_CC)

$(BUILDDIR)/r_light.o :  $(SRC_DIR)/r_light.c
	$(DO_CC)

$(BUILDDIR)/r_draw.o :   $(SRC_DIR)/r_draw.c
	$(DO_CC)

$(BUILDDIR)/r_efrag.o :  $(SRC_DIR)/r_efrag.c
	$(DO_CC)

$(BUILDDIR)/r_edge.o :   $(SRC_DIR)/r_edge.c
	$(DO_CC)

$(BUILDDIR)/r_misc.o :   $(SRC_DIR)/r_misc.c
	$(DO_CC)

$(BUILDDIR)/r_main.o :   $(SRC_DIR)/r_main.c
	$(DO_CC)

$(BUILDDIR)/r_sky.o :    $(SRC_DIR)/r_sky.c
	$(DO_CC)

$(BUILDDIR)/r_sprite.o : $(SRC_DIR)/r_sprite.c
	$(DO_CC)

$(BUILDDIR)/r_surf.o :   $(SRC_DIR)/r_surf.c
	$(DO_CC)

$(BUILDDIR)/r_part.o :   $(SRC_DIR)/r_part.c
	$(DO_CC)

$(BUILDDIR)/r_vars.o :   $(SRC_DIR)/r_vars.c
	$(DO_CC)

$(BUILDDIR)/screen.o :   $(SRC_DIR)/screen.c
	$(DO_CC)

$(BUILDDIR)/sbar.o :     $(SRC_DIR)/sbar.c
	$(DO_CC)

$(BUILDDIR)/sv_main.o :  $(SRC_DIR)/sv_main.c
	$(DO_CC)

$(BUILDDIR)/sv_phys.o :  $(SRC_DIR)/sv_phys.c
	$(DO_CC)

$(BUILDDIR)/sv_move.o :  $(SRC_DIR)/sv_move.c
	$(DO_CC)

$(BUILDDIR)/sv_user.o :  $(SRC_DIR)/sv_user.c
	$(DO_CC)

$(BUILDDIR)/zone.o	:   $(SRC_DIR)/zone.c
	$(DO_CC)

$(BUILDDIR)/view.o	:   $(SRC_DIR)/view.c
	$(DO_CC)

$(BUILDDIR)/wad.o :      $(SRC_DIR)/wad.c
	$(DO_CC)

$(BUILDDIR)/world.o :    $(SRC_DIR)/world.c
	$(DO_CC)

$(BUILDDIR)/cd_null.o : $(SRC_DIR)/cd_null.c
	$(DO_CC)

$(BUILDDIR)/sys_linux.o :$(SRC_DIR)/sys_linux.c
	$(DO_CC)

$(BUILDDIR)/in_dos.o :$(SRC_DIR)/in_dos.c
	$(DO_CC)

$(BUILDDIR)/vid_x.o:$(SRC_DIR)/vid_x.c
	$(DO_O_CC)

$(BUILDDIR)/vid_vga.o:$(SRC_DIR)/vid_vga.c
	$(DO_O_CC)

$(BUILDDIR)/vid_ext.o:$(SRC_DIR)/vid_ext.c
	$(DO_O_CC)

$(BUILDDIR)/vregset.o:$(SRC_DIR)/vregset.c
	$(DO_O_CC)

$(BUILDDIR)/snd_dma.o :  $(SRC_DIR)/snd_dma.c
	$(DO_CC)

$(BUILDDIR)/snd_mem.o :  $(SRC_DIR)/snd_mem.c
	$(DO_CC)

$(BUILDDIR)/snd_mix.o :  $(SRC_DIR)/snd_mix.c
	$(DO_CC)

$(BUILDDIR)/snd_null.o : $(SRC_DIR)/snd_null.c
	$(DO_CC)

#####

$(BUILDDIR)/d_copy.o :   $(SRC_DIR)/$(OCPU)/d_copy.s
	$(DO_AS)

$(BUILDDIR)/d_draw.o :   $(SRC_DIR)/$(OCPU)/d_draw.s
	$(DO_AS)

$(BUILDDIR)/d_draw16.o : $(SRC_DIR)/$(OCPU)/d_draw16.s
	$(DO_AS)

$(BUILDDIR)/d_parta.o :  $(SRC_DIR)/$(OCPU)/d_parta.s
	$(DO_AS)

$(BUILDDIR)/d_polysa.o : $(SRC_DIR)/$(OCPU)/d_polysa.s
	$(DO_AS)

$(BUILDDIR)/d_scana.o :  $(SRC_DIR)/$(OCPU)/d_scana.s
	$(DO_AS)

$(BUILDDIR)/d_spr8.o :   $(SRC_DIR)/$(OCPU)/d_spr8.s
	$(DO_AS)

$(BUILDDIR)/d_varsa.o :  $(SRC_DIR)/d_varsa.s
	$(DO_AS)

$(BUILDDIR)/math.o :     $(SRC_DIR)/$(OCPU)/math.s
	$(DO_AS)

$(BUILDDIR)/r_aliasa.o : $(SRC_DIR)/$(OCPU)/r_aliasa.s
	$(DO_AS)

$(BUILDDIR)/r_drawa.o :  $(SRC_DIR)/$(OCPU)/r_drawa.s
	$(DO_AS)

$(BUILDDIR)/r_edgea.o :  $(SRC_DIR)/$(OCPU)/r_edgea.s
	$(DO_AS)

$(BUILDDIR)/r_varsa.o :  $(SRC_DIR)/r_varsa.s
	$(DO_AS)

$(BUILDDIR)/surf16.o :   $(SRC_DIR)/$(OCPU)/surf16.s
	$(DO_AS)

$(BUILDDIR)/surf8.o :    $(SRC_DIR)/$(OCPU)/surf8.s
	$(DO_AS)

$(BUILDDIR)/worlda.o :   $(SRC_DIR)/$(OCPU)/worlda.s
	$(DO_AS)

$(BUILDDIR)/r_aclipa.o : $(SRC_DIR)/$(OCPU)/r_aclipa.s
	$(DO_AS)

$(BUILDDIR)/snd_mixa.o : $(SRC_DIR)/snd_mixa.s
	$(DO_AS)

$(BUILDDIR)/sys_dosa.o : $(SRC_DIR)/sys_dosa.s
	$(DO_AS)

#############################################################################
# MISC
#############################################################################

clean:
	rm -f 486quake.spec glquake.spec quake.x11.spec
	rm -f $(486QUAKE_OBJS)

cleanmake: clean all
